class Clock{constructor(container){this.container=container,this.time=new Date,this.interval=null}start(){this.interval=setInterval(()=>{this.time=new Date,this.render()},1e3)}stop(){clearInterval(this.interval)}render(){const dateOptions={weekday:"short",month:"short",day:"numeric",year:"numeric"},timeOptions={hour:"numeric",minute:"numeric",second:"numeric",hour12:!0};this.container.querySelector("p").innerHTML=this.time.toLocaleDateString(void 0,dateOptions),this.container.querySelector("h1").innerHTML=this.time.toLocaleTimeString(void 0,timeOptions).slice(0,-3),this.container.querySelector("span").innerHTML=this.time.toLocaleTimeString(void 0,{hour:"numeric",hour12:!0}).slice(-2)}}let card_i=0;const COLORS=["#FF7597","#BB86FC","#F50057","#6200EE","#1DE9B6","#FFAB00","#00B0FF","#D500F9","#00E676","#FF3D00","#2979FF","#00C853"],CARDS_CONTAINER=document.querySelector("header"),MODAL_CONTAINER=document.getElementById("modal-container"),MESSAGE_CONTAINER=document.getElementById("message-container");let MODAL_EVENTS=[],CARD_EVENTS=[];function addEvent(name){try{if(card_i>COLORS.length-1)return;const card=document.createElement("button");card.classList.add("card"),card.style.setProperty("--bg-color",COLORS[card_i]),card.innerHTML=`\n            <div class="top">\n                <img src="/static/img/clock.svg" alt="Nuevo registro" class="clock">\n                <img src="/static/img/edit.svg" alt="Editar evento" class="edit">\n                <img src="/static/img/remove.svg" alt="Eliminar evento" class="remove">\n            </div>\n            <div class="bottom">\n                <h2>${name}</h2>\n            </div>\n        `,CARDS_CONTAINER.appendChild(card),document.querySelector("form.export select").innerHTML+=`<option value="${name}">${name}</option>`,card_i++}catch(error){}}function removeEvent(){resetCardEvents();const event=CARDS_CONTAINER.classList[0];"edit"!==event&&"remove"!==event||CARDS_CONTAINER.querySelector(".cancel").remove(),CARDS_CONTAINER.classList=""}function createCancelBtn(){const cancelBtn=document.createElement("button");cancelBtn.classList.add("cancel"),cancelBtn.textContent="Cancelar",CARDS_CONTAINER.querySelector("#clock_component").insertAdjacentElement("afterend",cancelBtn),cancelBtn.addEventListener("click",removeEvent)}function removeModalandEvent(){removeModal(),removeEvent(),defaultCardsEvents()}function removeModal(){try{MODAL_CONTAINER.classList.remove("active"),MODAL_CONTAINER.querySelector(".active").classList.remove("active"),MODAL_EVENTS.forEach(event=>{try{event[0].removeEventListener("click",event[1])}catch(error){}}),MODAL_EVENTS=[]}catch(error){console.log("no modal displayed")}}function handleRemoveModal(modal){const CLOSE_BTN=modal.querySelector("button.close"),close_handler=()=>{removeModal()},outside_handler=ev=>{"modal-container"===ev.target.id&&removeModal()};MODAL_CONTAINER.addEventListener("click",outside_handler),CLOSE_BTN.addEventListener("click",close_handler),MODAL_EVENTS.push([MODAL_CONTAINER,outside_handler]),MODAL_EVENTS.push([CLOSE_BTN,close_handler])}function handleRemoveModalandEvents(modal){const CLOSE_BTN=modal.querySelector("button.close"),close_handler=()=>{removeModalandEvent()},outside_handler=ev=>{"modal-container"===ev.target.id&&removeModalandEvent()};MODAL_CONTAINER.addEventListener("click",outside_handler),CLOSE_BTN.addEventListener("click",close_handler),MODAL_EVENTS.push([MODAL_CONTAINER,outside_handler]),MODAL_EVENTS.push([CLOSE_BTN,close_handler])}function setSessionModal(modal){const share_handler=()=>{const session=modal.querySelector("h3").innerHTML,session_id=session.slice(1,session.length),url=`https://datarizer.vercel.app/session/${session_id}`,text=`¡Hola! Te invito a ver mi sesión de trabajo en Datarizer: ${url}`;navigator.share?navigator.share({title:"Datarizer",text:text,url:url}).then(()=>{console.log("Compartido")}).catch(error=>{console.log(error)}):navigator.clipboard.writeText(text).then(()=>{MESSAGE_CONTAINER.querySelector("p").innerHTML="¡Enlace copiado al portapapeles!",MESSAGE_CONTAINER.style.height=MESSAGE_CONTAINER.scrollHeight+"px",setTimeout(()=>{MESSAGE_CONTAINER.style.height=0},4e3)}).catch(error=>{console.log(error)}),removeModal()};modal.querySelector("button.share").addEventListener("click",share_handler),MODAL_EVENTS.push([modal.querySelector("button.share"),share_handler]);const save_handler=async ev=>{};modal.querySelector("button.save").addEventListener("click",save_handler),MODAL_EVENTS.push([modal.querySelector("button.save"),save_handler]);const new_repo=()=>{window.location.href="new/"};modal.querySelector("button.new").addEventListener("click",new_repo),MODAL_EVENTS.push([modal.querySelector("button.new"),new_repo])}function setAddModal(modal){const submit_handler=async ev=>{ev.preventDefault();const name=ev.target.querySelector("input").value,label_error=modal.querySelector("label.error");if(name.length>10)label_error.innerHTML="El nombre es demasiado largo";else if(name.length<3)label_error.innerHTML="El nombre es demasiado corto";else try{const response=await fetch(`/api/add/${name}`,{method:"GET",headers:{"Content-Type":"application/json"},credentials:"include"});if(200!==response.status)return void(label_error.innerHTML="El evento ya existe");addEvent(name),removeModal()}catch(error){console.log(error)}};modal.querySelector("form").addEventListener("submit",submit_handler),MODAL_EVENTS.push([modal.querySelector("form"),submit_handler])}function resetCardEvents(){CARD_EVENTS.forEach(event=>{try{event[0].removeEventListener("click",event[1])}catch(error){}}),CARD_EVENTS=[]}function defaultCardsEvents(card=null){const cards=CARDS_CONTAINER.querySelectorAll("button.card"),defaultEvent=async ev=>{const card=ev.target.closest("button.card"),name=card.querySelector("h2").innerHTML;try{const response=await fetch(`/api/log/${name}`,{method:"GET",headers:{"Content-Type":"application/json"},credentials:"include"});if(200!==response.status)return MESSAGE_CONTAINER.querySelector("p").innerHTML="No se ha podido registrar el evento",MESSAGE_CONTAINER.style.height=MESSAGE_CONTAINER.scrollHeight+"px",void setTimeout(()=>{MESSAGE_CONTAINER.style.height=0},4e3);{const data=await response.json(),table=document.querySelector("table"),row=document.createElement("tr");row.innerHTML=`\n                    <td>${data.date}</td>\n                    <td>${name}</td>\n                `,DATA_ROWS>4&&table.querySelector("tbody").lastElementChild.remove(),table.querySelector("tbody th").parentElement.insertAdjacentElement("afterend",row)}}catch(error){return MESSAGE_CONTAINER.querySelector("p").innerHTML="No se ha podido registrar el evento",MESSAGE_CONTAINER.style.height=MESSAGE_CONTAINER.scrollHeight+"px",void setTimeout(()=>{MESSAGE_CONTAINER.style.height=0},4e3)}};if(card)return card.addEventListener("click",defaultEvent),void CARD_EVENTS.push([card,defaultEvent]);cards.forEach(card=>{card.addEventListener("click",defaultEvent),CARD_EVENTS.push([card,defaultEvent])})}function removeSetup(){CARDS_CONTAINER.classList="remove";const cards=CARDS_CONTAINER.querySelectorAll("button.card"),removeEventHandler=async card=>{const name=card.querySelector("h2").innerHTML;try{const response=await fetch(`/api/remove/${name}`,{method:"GET",headers:{"Content-Type":"application/json"},credentials:"include"});if(200!==response.status)return;card.remove(),removeEvent(),defaultCardsEvents(),card_i--}catch(error){console.log(error)}finally{removeModal(),0===card_i&&showModal({target:{classList:[,"ob_add"]}})}},removeEventConfirm=ev=>{const card=ev.target.closest("button.card"),name=card.querySelector("h2").innerHTML,modal=MODAL_CONTAINER.querySelector("div.modal.confirm");modal.querySelector("p").innerHTML=`¿Estás seguro de que quieres eliminar <strong>${name}</strong>?`,modal.classList.add("active"),MODAL_CONTAINER.classList.add("active"),MODAL_EVENTS.push([modal,removeEventConfirm]),modal.querySelector("button.delete").addEventListener("click",()=>{removeEventHandler(card)}),MODAL_EVENTS.push([modal.querySelector("button.delete"),()=>{removeEventHandler(card)}]),modal.querySelector("button.cancel").addEventListener("click",removeModalandEvent),MODAL_EVENTS.push([modal.querySelector("button.cancel"),removeModalandEvent]),handleRemoveModalandEvents(modal)};cards.forEach(card=>{card.addEventListener("click",removeEventConfirm),CARD_EVENTS.push([card,removeEventConfirm])})}function editSetup(){CARDS_CONTAINER.classList="edit";const cards=CARDS_CONTAINER.querySelectorAll("button.card"),editEventHandler=async(ev,card)=>{ev.preventDefault();try{const last=ev.target.querySelector("input[type=hidden]").value,name=ev.target.querySelector("input[type=text]").value,response=await fetch(`/api/edit/${last}/${name}`,{method:"GET",headers:{"Content-Type":"application/json"},credentials:"include"});200===response.status?(card.querySelector("h2").innerHTML=name,removeEvent(),defaultCardsEvents(),removeModal()):ev.target.querySelector("label.error").innerHTML="El evento ya existe"}catch(error){console.error(error)}},editEventConfirm=ev=>{const card=ev.target.closest("button.card"),name=card.querySelector("h2").innerHTML,modal=MODAL_CONTAINER.querySelector("div.modal.edit");modal.classList.add("active"),MODAL_CONTAINER.classList.add("active"),modal.querySelector("form input[type=hidden]").value=name,modal.querySelector("form").addEventListener("submit",ev=>{editEventHandler(ev,card)}),MODAL_EVENTS.push([modal.querySelector("form"),ev=>{editEventHandler(ev,card)}]),handleRemoveModalandEvents(modal)};cards.forEach(card=>{card.addEventListener("click",editEventConfirm),CARD_EVENTS.push([card,editEventConfirm])})}function showModal(ev){if("session-handler"==ev.target.id){MODAL_CONTAINER.classList.add("active");const SESSION_MODAL=MODAL_CONTAINER.querySelector(".session");setTimeout(()=>{SESSION_MODAL.classList.add("active")},100),handleRemoveModal(SESSION_MODAL),setSessionModal(SESSION_MODAL)}else if("add"===ev.target.classList[1]){MODAL_CONTAINER.classList.add("active");const ADD_MODAL=MODAL_CONTAINER.querySelector(".add");ADD_MODAL.classList.add("active"),handleRemoveModal(ADD_MODAL),setAddModal(ADD_MODAL)}else if("edit"===ev.target.classList[1])removeEvent(),editSetup(),createCancelBtn();else if("remove"===ev.target.classList[1])removeEvent(),removeSetup(),createCancelBtn();else{if("ob_add"!==ev.target.classList[1])return;{MODAL_CONTAINER.classList.add("active");const ADD_MODAL=MODAL_CONTAINER.querySelector(".ob_add");ADD_MODAL.classList.add("active"),setAddModal(ADD_MODAL)}}}window.onload=()=>{const clockContainer=document.getElementById("clock_component"),clock=new Clock(clockContainer);clock.start(),EVENTS.length>0?(EVENTS.forEach(event=>{addEvent(event)}),defaultCardsEvents()):showModal({target:{classList:[,"ob_add"]}}),document.getElementById("session-handler").addEventListener("click",showModal);const actionsContainer=document.getElementById("actions");actionsContainer.querySelector("#handler-btn").addEventListener("click",()=>{actionsContainer.classList.toggle("active")}),actionsContainer.querySelector("button.action.add").addEventListener("click",showModal),actionsContainer.querySelector("button.action.edit").addEventListener("click",showModal),actionsContainer.querySelector("button.action.remove").addEventListener("click",showModal)};